## 
## Copyright 2019 Arne Petersen, Kiel University
## 
##    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and 
##    associated documentation files (the "Software"), to deal in the Software without restriction, including
##    without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
##    sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject
##    to the following conditions:
## 
##    The above copyright notice and this permission notice shall be included in all copies or substantial
##    portions of the Software.
## 
##    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
##    LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
##    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
##    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
##    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.#pragma once
## 

IF (NOT WIN32)
	SET(PIP_COMPILER_FLAGS -Wall -Wpedantic -Werror)
ENDIF(NOT WIN32)

# custom library add command setting compile properties per target/lib
MACRO(PIP_ADD_LIBRARY)
  # get parameters from macro list
  SET(list_var "${ARGN}")
  LIST(GET list_var 0 LibName)
  LIST(REMOVE_AT list_var 0)
  ADD_LIBRARY(${LibName} ${list_var})
  TARGET_LINK_LIBRARIES(${LibName} ${OpenCV_LIBRARIES})
  # add mandatory C++11 support
  TARGET_COMPILE_FEATURES(${LibName} PRIVATE cxx_std_11)
  TARGET_COMPILE_OPTIONS(${LibName} PRIVATE "${PIP_COMPILER_FLAGS}")
  IF (WIN32)
    # disable definition of min/max macros in windows, collision with std::...max/min methods
    TARGET_COMPILE_DEFINITIONS(${LibName} PRIVATE NOMINMAX)
  ENDIF (WIN32)
ENDMACRO(PIP_ADD_LIBRARY)

# custom executable add command setting compile properties per target/lib
MACRO(PIP_ADD_EXECUTABLE)
  # get parameters from macro list
  SET(list_var "${ARGN}")
  LIST(GET list_var 0 ExecName)
  LIST(REMOVE_AT list_var 0)
  ADD_EXECUTABLE(${ExecName} ${list_var})
  TARGET_LINK_LIBRARIES(${ExecName} ${OpenCV_LIBRARIES})
  # add mandatory C++11 support
  TARGET_COMPILE_FEATURES(${ExecName} PRIVATE cxx_std_11)
  TARGET_COMPILE_OPTIONS(${ExecName} PRIVATE "${PIP_COMPILER_FLAGS}")
  IF (WIN32)
    # disable definition of min/max macros in windows, collision with std::...max/min methods
    TARGET_COMPILE_DEFINITIONS(${ExecName} PRIVATE NOMINMAX)
  ENDIF (WIN32)
ENDMACRO(PIP_ADD_EXECUTABLE)
